name: Deploy Release

on:
  workflow_run:
    workflows: ["Release PR"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    name: Deploy Changed Packages
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🚀 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.11

      - name: 📦 Install dependencies
        run: bun install

      - name: 🔍 Get Changed Packages
        id: changed
        run: |
          echo "::group::📋 Changed Packages"
          # Get the last two commits to compare
          LAST_COMMIT=$(git rev-parse HEAD)
          PREV_COMMIT=$(git rev-parse HEAD^)
          
          # Get changed files between commits
          CHANGED_FILES=$(git diff --name-only $PREV_COMMIT $LAST_COMMIT)
          
          # Find changed packages
          CHANGED_PACKAGES=$(echo "$CHANGED_FILES" | grep -E "^(apps|packages)/[^/]+/" | cut -d/ -f1,2 | sort -u)
          
          # Store for later use
          echo "packages<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_PACKAGES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "Changed packages:"
          echo "$CHANGED_PACKAGES"
          echo "::endgroup::"

      - name: 🏗️ Build Changed Packages
        run: |
          echo "::group::🏗️ Building Packages"
          for pkg in ${{ steps.changed.outputs.packages }}; do
            echo "Building $pkg..."
            bun run build --filter=$pkg
          done
          echo "::endgroup::"

      - name: 🐳 Build and Push Docker Images
        run: |
          echo "::group::🐳 Building Docker Images"
          for pkg in ${{ steps.changed.outputs.packages }}; do
            if [ -f "$pkg/Dockerfile" ]; then
              echo "Building Docker image for $pkg..."
              docker build -t your-registry/$pkg:${{ github.sha }} -t your-registry/$pkg:latest $pkg
              docker push your-registry/$pkg:${{ github.sha }}
              docker push your-registry/$pkg:latest
            fi
          done
          echo "::endgroup::"

      - name: 🚀 Deploy to Environment
        run: |
          echo "::group::🚀 Deploying Packages"
          for pkg in ${{ steps.changed.outputs.packages }}; do
            if [ -f "$pkg/deploy.sh" ]; then
              echo "Deploying $pkg..."
              bash $pkg/deploy.sh
            fi
          done
          echo "::endgroup::"

      - name: 📝 Create Deployment PR
        run: |
          echo "::group::📝 Creating Deployment PR"
          # Create a new branch for deployment
          git checkout -b "deploy/${{ github.sha }}"
          
          # Update deployment manifests if needed
          for pkg in ${{ steps.changed.outputs.packages }}; do
            if [ -f "$pkg/deployment.yaml" ]; then
              # Update image tags in deployment manifests
              sed -i "s|image: your-registry/$pkg:.*|image: your-registry/$pkg:${{ github.sha }}|" $pkg/deployment.yaml
            fi
          done
          
          # Commit and push changes
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "chore(deploy): update deployment manifests for ${{ github.sha }}"
          git push origin "deploy/${{ github.sha }}"
          
          # Create PR
          gh pr create \
            --title "Deploy Release ${{ github.sha }}" \
            --body "Deployment PR for release ${{ github.sha }}
            
            Changed packages:
            ${{ steps.changed.outputs.packages }}" \
            --base main
          echo "::endgroup::"
