name: Deploy docs-astro to GitHub Pages
on:
  # Trigger the workflow every time you push to the `main` branch
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  get-affected:
    name: 🔍 Get affected
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    outputs:
      affected-services: ${{ steps.affected-services.outputs.affected-services }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.19

      - name: 🗃️ Cache Bun dependencies
        uses: actions/cache@v4
        id: bun-cache
        with:
          path: |
            ~/.bun/install/cache
            **/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: 📦 Install dependencies
        if: steps.bun-cache.outputs.cache-hit != 'true'
        run: bun install -E --no-save

      - name: 🔍 Get affected services
        id: affected-services
        run: |
          echo "::group::🔍 Getting affected services"
          bun run scripts/ci-attach-affected.ts --mode docker --output-id affected-services
          echo "::endgroup::"

  build:
    if: github.event.workflow_run.conclusion == 'success' && contains(needs.get-affected.outputs.affected-services, 'docs-astro')
    runs-on: ubuntu-latest
    needs: get-affected
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🚀 Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.19

      - name: 🗃️ Cache Bun dependencies
        uses: actions/cache@v4
        id: bun-cache
        with:
          path: |
            ~/.bun/install/cache
            **/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: 📦 Install dependencies
        if: steps.bun-cache.outputs.cache-hit != 'true'
        run: bun install -E --no-save

      - name: 🏗️ Build and upload site
        uses: withastro/action@v3
        with:
          path: apps/docs-astro # The root location of your Astro project inside the repository
          node-version: 20 # The specific version of Node that should be used to build your site
          package-manager: bun # Use bun as the package manager

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 
        