name: repo

networks:
  dev-network:
    driver: bridge

volumes:
  node_modules:
    driver: local
  turbo_cache:
    driver: local
  bun_cache:
    driver: local
  vscode_cache:
    driver: local

services:
  # VS Code development environment - lightweight container for dev tools
  vscode:
    build:
      context: ../
      dockerfile: .devcontainer/Dockerfile.vscode
    environment:
      - TURBO_TOKEN=${TURBO_TOKEN:-}
      - TURBO_TEAM=${TURBO_TEAM:-}
    volumes:
      - ${PROJECT_ROOT:-../}:/app:cached
      # Override volumes
      - node_modules:/app/node_modules:delegated
      - turbo_cache:/app/.turbo:delegated
      - bun_cache:/root/.bun:delegated
      - vscode_cache:/app/.vscode:delegated
    command: sleep infinity
    # Use init for better signal handling
    init: true
    networks:
      - dev-network
    profiles: ["vscode"]
    healthcheck:
      test: ["CMD", "ps", "aux"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Apps runtime environment - shared container for all applications
  apps:
    build:
      context: ../
      dockerfile: .devcontainer/Dockerfile.dev
      # Enable BuildKit for advanced caching
      x-bake:
        contexts:
          buildkit: docker-container://buildkit
      args:
        - TURBO_TOKEN=${TURBO_TOKEN:-}
        - TURBO_TEAM=${TURBO_TEAM:-}
      # Enable BuildKit cache from environment
      cache_from:
        - type=gha
      # Increase memory limits to help with node_modules I/O
      shm_size: '1gb'
    volumes:
      # Use environment-aware volume mounts (works from host or devcontainer)
      - ${PROJECT_ROOT:-../}/apps:/app/apps:cached
      - ${PROJECT_ROOT:-../}/packages:/app/packages:cached
      - ${PROJECT_ROOT:-../}/scripts:/app/scripts:cached
      - ${PROJECT_ROOT:-../}/package.json:/app/package.json:cached
      - ${PROJECT_ROOT:-../}/bun.lock:/app/bun.lock:cached
      - ${PROJECT_ROOT:-../}/turbo.json:/app/turbo.json:cached
      # Override volumes
      - node_modules:/app/node_modules:delegated
      - turbo_cache:/app/.turbo:delegated
      - bun_cache:/root/.bun:delegated
      - vscode_cache:/app/.vscode:delegated
    command: sleep infinity
    environment:
      - NODE_ENV=development
      - TURBO_TOKEN=${TURBO_TOKEN:-}
      - TURBO_TEAM=${TURBO_TEAM:-}
    # Use init for better signal handling
    init: true
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "ps", "aux"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Lightweight app containers that inherit from apps runtime
  admin:
    extends:
      service: apps
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - TURBO_TOKEN=${TURBO_TOKEN:-}
      - TURBO_TEAM=${TURBO_TEAM:-}
    command: bun run dev --filter=admin
    profiles: ["admin", "all"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  storefront:
    extends:
      service: apps
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - TURBO_TOKEN=${TURBO_TOKEN:-}
      - TURBO_TEAM=${TURBO_TEAM:-}
    command: bun run dev --filter=storefront
    profiles: ["storefront", "all"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  api:
    extends:
      service: apps
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - TURBO_TOKEN=${TURBO_TOKEN:-}
      - TURBO_TEAM=${TURBO_TEAM:-}
    command: bun run dev --filter=api
    profiles: ["api", "all"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  ui:
    extends:
      service: apps
    ports:
      - "3006:3006"
    environment:
      - PORT=3006
      - HOST=0.0.0.0
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - TURBO_TOKEN=${TURBO_TOKEN:-}
      - TURBO_TEAM=${TURBO_TEAM:-}
    command: bun run dev --filter=@repo/ui
    profiles: ["ui", "all"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006"]
