---
description: Conventional commits
globs: ["*"]
alwaysApply: true
---

# Conventional Commits Standards

## 📋 Commit Structure

```
<type>(<scope>): <subject>

<body>

<footer>
```

## 📝 Type Categories

Based on `commitlint.config.ts`, use these types:

- **`feat`** - A new feature
- **`fix`** - A bug fix  
- **`docs`** - Documentation only changes
- **`style`** - Changes that do not affect the meaning of the code
- **`refactor`** - A code change that neither fixes a bug nor adds a feature
- **`perf`** - A code change that improves performance
- **`test`** - Adding missing tests or correcting existing tests
- **`build`** - Changes that affect the build system or external dependencies
- **`ci`** - Changes to our CI configuration files and scripts
- **`chore`** - Other changes that don't modify src or test files
- **`revert`** - Reverts a previous commit
- **`wip`** - Work in progress

## 🎯 Formatting Rules

- **Type case**: Always lowercase (`fix`, not `Fix`)
- **Scope case**: Always lowercase (`ci`, not `CI`)
- **Subject case**: Always lowercase (`resolve docker issues`, not `Resolve Docker Issues`)
- **Subject**: No trailing period
- **Header max length**: 72 characters
- **Scope**: Optional but recommended for clarity

## 📊 Common Scopes

Based on repository patterns and VS Code settings:

### 🏗️ Application Scopes
- **`(admin)`** - Admin application changes (apps/admin/)
- **`(api)`** - API application changes (apps/api/)
- **`(storefront)`** - Storefront application changes (apps/storefront/)
- **`(blog)`** - Blog application changes (apps/blog/)
- **`(ui)`** - UI package changes (packages/ui/)

### 🔧 Infrastructure Scopes
- **`(ci)`** - CI/CD pipeline changes (GitHub Actions, workflows)
- **`(deps)`** - Dependency updates (package.json, bun.lock)
- **`(repo)`** - Repository-level documentation (README, docs/)
- **`(scripts)`** - Script changes (scripts/ directory)
- **`(config)`** - Configuration files (turbo.json, biome.json, etc.)

## 📋 Examples from Repository

```
fix(ci): resolve docker dependency issues in github actions
docs(repo): add environment variables documentation
chore(deps): update dependency vite to v7.0.6
fix(deps): update dependency @happy-dom/global-registrator to v18
docs(repo): add build-vite-library documentation
chore(deps): update dependency lefthook to v1.12.2
```

## 🎯 Best Practices

1. **Use lowercase** for type, scope, and subject
2. **Include appropriate scope** when it adds clarity
3. **Keep subject concise** but descriptive (under 72 chars)
4. **Use imperative mood** in subject ("add feature" not "added feature")
5. **Add detailed body** for complex changes explaining the "why"
6. **Follow exact type categories** from commitlint.config.ts
7. **Reference existing patterns** from repository for consistency

## 🚫 Common Mistakes to Avoid

- Using title case in subject (`Fix Docker Issues` ❌)
- Missing scope when it adds clarity
- Trailing periods in subject
- Using types not in the allowed list
- Subject longer than 72 characters
- Using past tense instead of imperative mood

## 📝 Body Guidelines

For complex changes, include a detailed body explaining:

- What was changed
- Why it was changed
- Any breaking changes
- Migration steps if needed
- Testing performed

Example:
```
fix(ci): resolve docker dependency issues in github actions

- Add automatic dependency resolution by parsing docker-compose.yml
- Include required services when affected packages have dependencies
- Prevent 'No such image' errors when services depend on prod-api
- Add yaml package for parsing docker-compose.yml file

This fixes the intermittent Docker image errors in CI by automatically
including service dependencies based on the actual docker-compose.yml
configuration.
```
